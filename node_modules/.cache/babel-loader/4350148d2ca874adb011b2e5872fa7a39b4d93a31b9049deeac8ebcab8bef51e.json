{"ast":null,"code":"var _jsxFileName = \"/Users/turkerozman/Desktop/Code/Github/BE/Netflix-React/src/components/Movies.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport fetchMedias from './FetchMedias';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const [medias, setMedias] = useState([]);\n  useEffect(() => {\n    fetchMedias().then(data => setMedias(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: medias.map(media => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: media.poster,\n            className: \"card-img-top\",\n            alt: media.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: media.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: media.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://www.imdb.com/title/${media.imdbID}`,\n              className: \"btn btn-primary\",\n              children: \"IMDB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, media.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"dNcvEY+wlnh1MZVz4q9wkEqj/1w=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["useState","useEffect","fetchMedias","Movies","medias","setMedias","then","data","map","media","poster","title","year","imdbID","id"],"sources":["/Users/turkerozman/Desktop/Code/Github/BE/Netflix-React/src/components/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport fetchMedias from './FetchMedias';\n\nconst Movies = () => {\n  const [medias, setMedias] = useState([]);\n\n  useEffect(() => {\n    fetchMedias().then(data => setMedias(data));\n  }, []);\n  \n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {medias.map(media => (\n          <div className=\"col-md-4\" key={media.id}>\n            <div className=\"card\">\n              <img src={media.poster} className=\"card-img-top\" alt={media.title} />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{media.title}</h5>\n                <p className=\"card-text\">{media.year}</p>\n                <a href={`https://www.imdb.com/title/${media.imdbID}`} className=\"btn btn-primary\">IMDB</a>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Movies\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdC,WAAW,EAAE,CAACI,IAAI,CAACC,IAAI,IAAIF,SAAS,CAACE,IAAI,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,uBACxB;MAAK,SAAS,EAAC,KAAK;MAAA,UACjBH,MAAM,CAACI,GAAG,CAACC,KAAK,iBACf;QAAK,SAAS,EAAC,UAAU;QAAA,uBACvB;UAAK,SAAS,EAAC,MAAM;UAAA,wBACnB;YAAK,GAAG,EAAEA,KAAK,CAACC,MAAO;YAAC,SAAS,EAAC,cAAc;YAAC,GAAG,EAAED,KAAK,CAACE;UAAM;YAAA;YAAA;YAAA;UAAA,QAAG,eACrE;YAAK,SAAS,EAAC,WAAW;YAAA,wBACxB;cAAI,SAAS,EAAC,YAAY;cAAA,UAAEF,KAAK,CAACE;YAAK;cAAA;cAAA;cAAA;YAAA,QAAM,eAC7C;cAAG,SAAS,EAAC,WAAW;cAAA,UAAEF,KAAK,CAACG;YAAI;cAAA;cAAA;cAAA;YAAA,QAAK,eACzC;cAAG,IAAI,EAAG,8BAA6BH,KAAK,CAACI,MAAO,EAAE;cAAC,SAAS,EAAC,iBAAiB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA;YAAA;YAAA;YAAA;UAAA,QACvF;QAAA;UAAA;UAAA;UAAA;QAAA;MACF,GARuBJ,KAAK,CAACK,EAAE;QAAA;QAAA;QAAA;MAAA,QAUxC;IAAC;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GAzBKX,MAAM;AAAA,KAANA,MAAM;AA2BZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}