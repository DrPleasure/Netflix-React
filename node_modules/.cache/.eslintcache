[{"/Users/Glad/Documents/GitHub/Epicode/U3/U3D5/my-netflix/src/index.js":"1","/Users/Glad/Documents/GitHub/Epicode/U3/U3D5/my-netflix/src/App.js":"2","/Users/Glad/Documents/GitHub/Epicode/U3/U3D5/my-netflix/src/reportWebVitals.js":"3","/Users/Glad/Documents/GitHub/Epicode/U3/U3D5/my-netflix/src/components/movieGallery.jsx":"4","/Users/Glad/Documents/GitHub/Epicode/U3/U3D5/my-netflix/src/components/NavigationBar.jsx":"5","/Users/Glad/Documents/GitHub/Epicode/U3/U3D5/my-netflix/src/components/Footer.jsx":"6"},{"size":205,"mtime":1669369960758,"results":"7","hashOfConfig":"8"},{"size":953,"mtime":1669378771944,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1669369832865,"results":"10","hashOfConfig":"8"},{"size":2463,"mtime":1669378786768,"results":"11","hashOfConfig":"8"},{"size":1578,"mtime":1669378190745,"results":"12","hashOfConfig":"8"},{"size":6236,"mtime":1669379388649,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1o8t9gq",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Glad/Documents/GitHub/Epicode/U3/U3D5/my-netflix/src/index.js",[],[],[],"/Users/Glad/Documents/GitHub/Epicode/U3/U3D5/my-netflix/src/App.js",[],[],"/Users/Glad/Documents/GitHub/Epicode/U3/U3D5/my-netflix/src/reportWebVitals.js",[],[],"/Users/Glad/Documents/GitHub/Epicode/U3/U3D5/my-netflix/src/components/movieGallery.jsx",["34","35"],[],"import React from \"react\";\nimport { Spinner, Carousel, Row, Col, Alert } from \"react-bootstrap\";\n\nlet key = `98032d8e`;\n\nclass MovieGallery extends React.Component {\n  state = {\n    isLoading: true,\n    isError: false,\n    movies: [],\n  };\n\n  fetchMovies = async () => {\n    try {\n      let uri = `http://www.omdbapi.com/?apikey=${key}&s=${encodeURIComponent(\n        this.props.search.toLowerCase()\n      )}`;\n      let response = await fetch(uri);\n\n      if (response.ok) {\n        let data = await response.json();\n\n        let perChunk = 6; //6 movies per \"chunk\"\n\n        const d = data.Search.reduce((resultArray, item, index) => {\n          //Convert the original \"search\" array into chunks of 6 so the carousel can slide between them!\n          const chunkIndex = Math.floor(index / perChunk);\n\n          if (!resultArray[chunkIndex]) {\n            resultArray[chunkIndex] = [];\n          }\n\n          resultArray[chunkIndex].push(item);\n\n          return resultArray;\n        }, []);\n\n        console.log(d);\n\n        this.setState({\n          ...this.state,\n          isLoading: false,\n          movies: d,\n        });\n      } else {\n        this.setState({\n          ...this.state,\n          isError: true,\n          isLoading: false,\n        });\n      }\n    } catch (e) {\n      this.setState({\n        ...this.state,\n        isError: true,\n        isLoading: false,\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  render() {\n    return (\n      <div className=\"movie-gallery m-2\">\n        <h5 className=\"text-light mt-2 mb-2\">{this.props.search}</h5>\n\n        {this.state.isLoading && <Spinner></Spinner>}\n\n        {this.state.isError && (\n          <Alert variant=\"danger\">\n            There was an error fetching these movies!\n          </Alert>\n        )}\n\n        {!this.state.isLoading && !this.state.isError && (\n          <Carousel>\n            {this.state.movies.map((movies) => (\n              <Carousel.Item>\n                <div className=\"movie-row\">\n                  <Row>\n                    {movies.map((movie) => (\n                      <Col md={2}>\n                        <a href=\"#\">\n                          <img src={movie.Poster} />\n                        </a>\n                      </Col>\n                    ))}\n                  </Row>\n                </div>\n              </Carousel.Item>\n            ))}\n          </Carousel>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MovieGallery;\n","/Users/Glad/Documents/GitHub/Epicode/U3/U3D5/my-netflix/src/components/NavigationBar.jsx",[],[],"/Users/Glad/Documents/GitHub/Epicode/U3/U3D5/my-netflix/src/components/Footer.jsx",[],[],{"ruleId":"36","severity":1,"message":"37","line":86,"column":25,"nodeType":"38","endLine":86,"endColumn":37},{"ruleId":"39","severity":1,"message":"40","line":87,"column":27,"nodeType":"38","endLine":87,"endColumn":53},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]